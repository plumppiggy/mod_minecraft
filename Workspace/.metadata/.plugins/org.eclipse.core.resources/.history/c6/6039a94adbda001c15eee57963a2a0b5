package com.Elysia.elysia.block.custom;

import javax.annotation.Nullable;

import com.Elysia.elysia.block.entity.ModBlockEntities;
import com.Elysia.elysia.block.entity.ToasterBlockEntity;

import net.minecraft.core.BlockPos;
import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.InteractionHand;
import net.minecraft.world.InteractionResult;
import net.minecraft.world.entity.player.Player;
import net.minecraft.world.level.Level;
import net.minecraft.world.level.block.BaseEntityBlock;
import net.minecraft.world.level.block.entity.BlockEntity;
import net.minecraft.world.level.block.entity.BlockEntityTicker;
import net.minecraft.world.level.block.entity.BlockEntityType;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraft.world.phys.BlockHitResult;
import net.minecraftforge.network.NetworkHooks;

public class ToasterBlock extends BaseEntityBlock {
	public ToasterBlock(Properties properties) {
		super(properties);
	}
	
	@Override
	public InteractionResult use(BlockState state, Level level, BlockPos pos,
	                                 Player player, InteractionHand hand, BlockHitResult hit) {
	        if (!level.isClientSide()) {
	            BlockEntity entity = level.getBlockEntity(pos);
	            if(entity instanceof ToasterBlockEntity) {
	                NetworkHooks.openGui(((ServerPlayer)player), (ToasterBlockEntity)entity, pos);
	            } else {
	                throw new IllegalStateException("Our Container provider is missing!");
	            }
	        }

	        return InteractionResult.sidedSuccess(level.isClientSide());
	}

	@Nullable
	@Override
	public BlockEntity newBlockEntity(BlockPos pos, BlockState state) {
		return new ToasterBlockEntity(pos, state);
	}
	
	@Nullable
	@Override
	public <T extends BlockEntity> BlockEntityTicker<T> getTicker(Level level, BlockState state, BlockEntityType<T> blockEntityType) {
		return createTickerHelper(blockEntityType, ModBlockEntities.TOASTER.get(), ToasterBlockEntity::tick);
	}

}
